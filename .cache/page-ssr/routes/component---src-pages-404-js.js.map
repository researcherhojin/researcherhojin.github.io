{"version":3,"file":"component---src-pages-404-js.js","mappings":";;;;;;;;;;;;;;AAGA,KAAME,OAAM,CAAG,CAAC,CAAEC,QAAQ,CAAEC,KAAK,CAAEC,QAAS,CAAC,GAAK,CAChD,KAAMC,SAAQ,CAAI,GAAEC,EAAgB,GAAE,CACtC,KAAMC,WAAU,CAAGL,QAAQ,CAACM,QAAQ,GAAKH,QAAQ,CACjD,GAAII,OAAM,CAEV,GAAIF,UAAU,CAAE,CACdE,MAAM,cACJ,uDAAI,SAAS,CAAC,cAAc,eAC1B,iDAAC,wCAAI,EAAC,EAAE,CAAC,GAAG,EAAEN,KAAK,CAAQ,CAE9B,CACH,CAAC,IAAM,CACLM,MAAM,cACJ,iDAAC,wCAAI,EAAC,SAAS,CAAC,kBAAkB,CAAC,EAAE,CAAC,GAAG,EACtCN,KAAK,CAET,CACH,CAEA,mBACE,wDAAK,SAAS,CAAC,gBAAgB,CAAC,oBAAmBI,UAAW,eAC5D,2DAAQ,SAAS,CAAC,eAAe,EAAEE,MAAM,CAAU,cACnD,6DAAOL,QAAQ,CAAQ,cACvB,+DAAQ,OACJ,CAAC,GAAIM,KAAI,EAAE,CAACC,WAAW,EAAE,CAAC,cAC5B,CAAE,GAAE,cACJ,sDAAG,IAAI,CAAC,0BAA0B,EAAC,QAAM,CAAI,CACtC,CACL,CAEV,CAAC,CAED,iEAAeV,MAAM;;;;;;;;;;;;;ACnCrB;AACA;AACA;AACA;AACA;AACA,GAKA,KAAMY,IAAG,CAAG,CAAC,CAAEC,WAAW,CAAEX,KAAK,CAAEC,QAAS,CAAC,GAAK,kEAChD,KAAM,CAAEW,IAAK,CAAC,CAAGH,sDAAc,cAc9B,CAED,KAAMI,gBAAe,CAAGF,WAAW,EAAIC,IAAI,CAACE,YAAY,CAACH,WAAW,CACpE,KAAMI,aAAY,qBAAGH,IAAI,CAACE,YAAY,6CAAjB,mBAAmBd,KAAK,CAE7C,mBACE,+GACE,8DAAQe,YAAY,CAAI,GAAEf,KAAM,MAAKe,YAAa,EAAC,CAAGf,KAAK,CAAS,cACpE,yDAAM,IAAI,CAAC,aAAa,CAAC,OAAO,CAAEa,eAAgB,EAAG,cACrD,yDAAM,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAEb,KAAM,EAAG,cAC5C,yDAAM,QAAQ,CAAC,gBAAgB,CAAC,OAAO,CAAEa,eAAgB,EAAG,cAC5D,yDAAM,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,EAAG,cAC7C,yDAAM,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,EAAG,cAC9C,yDACE,IAAI,CAAC,iBAAiB,CACtB,OAAO,CAAE,sBAAAD,IAAI,CAACE,YAAY,qEAAjB,oBAAmBE,MAAM,gDAAzB,sBAA2BC,OAAO,GAAK,EAAE,EAClD,cACF,yDAAM,IAAI,CAAC,eAAe,CAAC,OAAO,CAAEjB,KAAM,EAAG,cAC7C,yDAAM,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAEa,eAAgB,EAAG,CAC5DZ,QAAQ,CACR,CAEP,CAAC,CAED,iEAAeS,GAAG;;;;;;;;;;;;;;;;ACjDY;AAGW;AACN;AAEnC,MAAMQ,YAAY,GAAG,CAAC;EAAEC,IAAI;EAAEpB;AAAS,CAAC,KAAK;EAC3C,MAAMqB,SAAS,GAAGD,IAAI,CAACP,IAAI,CAACE,YAAY,CAACd,KAAK;EAE9C,oBACE,iDAAC,mEAAM;IAAC,QAAQ,EAAED,QAAS;IAAC,KAAK,EAAEqB;EAAU,gBAC3C,6DAAI,gBAAc,CAAK,eACvB,4DAAG,yDAA2D,CAAI,CAC3D;AAEb,CAAC;AAEM,MAAMC,IAAI,GAAG,mBAAM,iDAAC,gEAAG;EAAC,KAAK,EAAC;AAAgB,EAAG;AAExD,iEAAeH,YAAY;AAEpB,MAAMI,SAAS,eAQrB","sources":["webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/404.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        Â© {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h1>404: Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"404: Not Found\" />\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["React","Link","Layout","location","title","children","rootPath","__PATH_PREFIX__","isRootPath","pathname","header","Date","getFullYear","useStaticQuery","Seo","description","site","metaDescription","siteMetadata","defaultTitle","social","twitter","NotFoundPage","data","siteTitle","Head","pageQuery"],"sourceRoot":""}